name: CI - Build and Push to ECR

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]
  push:
    branches: [main]

env:
  ECR_REPOSITORY: frontend-demo
  ECR_REGISTRY: ${{ vars.AWS_DEV_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_DEV_ECR_REGION }}.amazonaws.com

jobs:
  lint:
    name: Python Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Run Ruff (linting)
        uses: astral-sh/ruff-action@v1
        with:
          src: "."

      - name: Check code formatting with Black
        uses: psf/black@stable
        with:
          options: "--check --verbose --diff"

      - name: Safety check (dependency vulnerabilities)
        uses: pyupio/safety@2.3.5
        with:
          scan: requirements.txt

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint
    
    permissions:
      id-token: write
      contents: read
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEV_GITHUB_ACTION_ROLE }}
          aws-region: ${{ vars.AWS_DEV_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tags
        id: tags
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # PR build: pr-{pr-number}-{short-sha}
            PR_NUMBER=${{ github.event.pull_request.number }}
            TAG="pr-${PR_NUMBER}-${SHORT_SHA}"
            echo "tags=${ECR_REGISTRY}/${ECR_REPOSITORY}:${TAG}" >> $GITHUB_OUTPUT
            echo "image_tag=${TAG}" >> $GITHUB_OUTPUT
          else
            # Main branch build: main-{short-sha} and main-stable
            MAIN_SHA_TAG="main-${SHORT_SHA}"
            MAIN_STABLE_TAG="main-stable"
            echo "tags=${ECR_REGISTRY}/${ECR_REPOSITORY}:${MAIN_SHA_TAG},${ECR_REGISTRY}/${ECR_REPOSITORY}:${MAIN_STABLE_TAG}" >> $GITHUB_OUTPUT
            echo "image_tag=${MAIN_SHA_TAG}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Image summary
        run: |
          echo "### 🐳 Docker Image Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:** ${{ steps.tags.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "**SHA:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "**Pull Request:** #${{ github.event.pull_request.number }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          fi